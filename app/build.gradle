apply plugin: 'com.android.application'

android {
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.github.brianspace.moviesbrowser"
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [scheme:URI_SCHEME, hostName:URI_HOST]
        buildConfigField "String", "URI_SCHEME", "\"$URI_SCHEME\""
        buildConfigField "String", "URI_HOST", "\"$URI_HOST\""

        // Set ROOM schema output directory.
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        // Turn off analysis progress reporting by lint
        quiet true
        // Stop the gradle build if errors are found
        abortOnError true
        // Do not ignore lint warnings
        ignoreWarnings false
        // Treat warnings as errors
        warningsAsErrors true

        // Write log to console
        textReport true
        textOutput "stdout"

        // Disabled rules
        disable 'IconMissingDensityFolder'

        // Ignore rules list
        ignore 'ObsoleteLintCustomCheck' // 'butterknife.lint.InvalidR2UsageDetector'
    }

    dataBinding {
        enabled = true
    }

    dexOptions {
        preDexLibraries true
    }

    signingConfigs {
        release {
            /*
             Either set the signing config here or set the following values in "gradle.properties" then reference here:
               RELEASE_STORE_FILE=xxx.xxx
               RELEASE_STORE_PASSWORD=xxx
               RELEASE_KEY_ALIAS=xxx
               RELEASE_KEY_PASSWORD=xxx
            */
            // storeFile file(RELEASE_STORE_FILE)
            // storePassword RELEASE_STORE_PASSWORD
            // keyAlias RELEASE_KEY_ALIAS
            // keyPassword RELEASE_KEY_PASSWORD
        }
    }

    // Set your TMDb API key here or set API_KEY in "gradle.properties" then reference here.
    // Reference: https://developers.themoviedb.org/3/getting-started/authentication
    def API_KEY_VALUE = project.ext.properties.API_KEY
    API_KEY_VALUE = API_KEY_VALUE == null ? "\"\"" : API_KEY_VALUE

    buildTypes {
        debug {
            buildConfigField "String", "API_KEY", API_KEY_VALUE
        }
        release {
            buildConfigField "String", "API_KEY", API_KEY_VALUE
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation project(':lib-common')
    implementation project(':lib-widgets')
    implementation project(':lib-databinding')

    // Test libraries
    testImplementation LIB_JUNIT

    // Mock framework: Mockito http://site.mockito.org/
    testImplementation "org.mockito:mockito-core:2.18.0"
    // Unit test framework for Android SDK in normal JVM. https://github.com/robolectric/robolectric/
    testImplementation 'org.robolectric:robolectric:3.8'

    // DexMaker (needed by Mockito)
    androidTestImplementation "com.linkedin.dexmaker:dexmaker:2.16.0"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.16.0"
    androidTestImplementation "org.mockito:mockito-core:2.18.0"
    androidTestImplementation LIB_TEST_RUNNER
    androidTestImplementation LIB_SUPPORT_ANNOTATIONS

    // Support libraries
    implementation LIB_SUPPORT_V13
    implementation LIB_SUPPORT_APP_COMPACT_V7
    implementation LIB_SUPPORT_DESIGN
    implementation LIB_SUPPORT_ANNOTATIONS
    implementation LIB_SUPPORT_RECYCLERVIEW_V7
    compileOnly 'javax.annotation:javax.annotation-api:1.3'

    // ConstraintLayout
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'

    // Dependency Injection. http://google.github.io/dagger/
    implementation 'com.google.dagger:dagger:2.15'
    implementation 'com.google.dagger:dagger-android:2.15'
    implementation 'com.google.dagger:dagger-android-support:2.15'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.15'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.15'

    // View binding https://github.com/JakeWharton/butterknife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // Retrofit REST client http://square.github.io/retrofit/
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'

    // OKHttp http://square.github.io/okhttp/
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'

    // GSON JSON lib https://github.com/google/gson
    implementation 'com.google.code.gson:gson:2.8.2'

    // RX
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2' // https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12' // https://github.com/ReactiveX/RxJava

    // Glide image library https://github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.7.1'
    implementation 'com.github.bumptech.glide:annotations:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'

    // Swipe to refresh https://github.com/omadahealth/SwipyRefreshLayout
    implementation 'com.github.omadahealth:swipy:1.2.3@aar'

    // Room https://developer.android.com/topic/libraries/architecture/room.html
    implementation LIB_ARCH_ROOM_RUNTIME
    implementation LIB_ARCH_ROOM_RXJAVA2
    annotationProcessor LIB_ARCH_ROOM_COMPILER

    // Use browser to view SQLite databases. https://github.com/amitshekhariitbhu/Android-Debug-Database
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.3'

    // Stetho (for network debugging) http://facebook.github.io/stetho/
    debugImplementation 'com.facebook.stetho:stetho:1.5.0'
    debugImplementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    // Leak detection https://github.com/square/leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
}
